---
# Mount nfs points:
# .
# └── /<hostname>/
#     ├── ansible/
#     └── debian12/

- name: Install NFS utils for Debian
  when: ansible_os_family == 'Debian'
  ansible.builtin.apt:
    name:
      - nfs4-acl-tools
      - nfs-common
    state: present

# This task serves as a workaround for what appears to be a bug when starting the NFS service using systemd.
# In a fresh `nfs-common` installation on Debian 11, the systemd service path mentioned below is a symbolic
# link to /dev/null. As a result, systemd marks the NFS service status as 'dead'.
#
# This situation creates a circular issue: to enable a dead service, you need to 'unmask' it first.
# But, because the service is dead, systemd cannot unmask it! :).
#
# The solution is to remove the symbolic link to /dev/null and reload the NFS systemd service to generate
# the correct symlink to the NFS systemd service file.
#
# Discovering this bug was challenging because the error message from the mounting command was misleading:
#   >> Error message: mount: 10.10.50.38:/volume1/test /data: can't find in /etc/fstab.
#
# Note: Neither the 'masked: false' Ansible directive nor 'command: systemctl unmask ...' worked.

- name: Remove NFS systemd service file
  ansible.builtin.file:
    path: /lib/systemd/system/nfs-common.service
    state: absent

# This should generate the correct '/lib/systemd/system/nfs-common.service' file
- name: Force systemd daemon to reread systemd-units configs
  ansible.builtin.systemd:
    daemon_reload: true

- name: Ensure NFS client service is running
  ansible.builtin.systemd:
    name: "{{ item }}"
    state: started
    enabled: true
  loop:
    - nfs-common
    - nfs-client.target

- name: Check directories before mounting
  ansible.builtin.file:
    path: "/mnt/{{ item }}"
    state: directory
    owner: "{{ default_user }}"
    group: "{{ default_user }}"
    recurse: true
  loop:
    - ansible
    - debian12
  ignore_errors: true

- name: Check variables
  ansible.builtin.debug:
    msg:
      - NFS source => {{ default_nfs_mount }}

- name: Mounting NFS
  ansible.posix.mount:
    src: "{{ default_nfs_mount }}/{{ item }}"
    path: "/mnt/{{ item }}"
    fstype: nfs
    opts: "rw,sync"
    state: mounted
    # add mount points to global_vars/all.yml
  loop: "{{ default_mount_points }}"
